import{aF as a,c as o,ax as l,o as t}from"./chunks/framework.SULaAIX3.js";const u=JSON.parse('{"title":"Form-Schema","description":"","frontmatter":{},"headers":[],"relativePath":"components/type/form-schema.md","filePath":"components/type/form-schema.md"}'),r={name:"components/type/form-schema.md"};function i(s,e,n,d,c,h){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="form-schema" tabindex="-1">Form-Schema <a class="header-anchor" href="#form-schema" aria-label="Permalink to &quot;Form-Schema&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>类型定义说明通过自动生成</p></div><h2 id="formitemrules" tabindex="-1">FormItemRules <a class="header-anchor" href="#formitemrules" aria-label="Permalink to &quot;FormItemRules&quot;">​</a></h2><p>扩展validator方法，支持自定义校验前置</p><h3 id="validatorfn" tabindex="-1">validatorFn <a class="header-anchor" href="#validatorfn" aria-label="Permalink to &quot;validatorFn&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(model: T) =&gt; FormItemRule[&#39;validator&#39;]</code></li></ul><h2 id="formitemsschema" tabindex="-1">FormItemsSchema <a class="header-anchor" href="#formitemsschema" aria-label="Permalink to &quot;FormItemsSchema&quot;">​</a></h2><p>表单项</p><h3 id="prop" tabindex="-1">prop <a class="header-anchor" href="#prop" aria-label="Permalink to &quot;prop&quot;">​</a></h3><p>model 的键名。 它可以是一个属性的值(如 a.b.0)</p><ul><li><strong>Type:</strong> <code>keyof T extends infer E ? (E extends string ? E : string) : string</code></li></ul><h3 id="label" tabindex="-1">label <a class="header-anchor" href="#label" aria-label="Permalink to &quot;label&quot;">​</a></h3><p>标签文本</p><ul><li><strong>Type:</strong> <code>string</code></li></ul><h3 id="labelwidth" tabindex="-1">labelWidth <a class="header-anchor" href="#labelwidth" aria-label="Permalink to &quot;labelWidth&quot;">​</a></h3><p>标签宽度</p><ul><li><strong>Type:</strong> <code>string</code></li></ul><h3 id="defaultvalue" tabindex="-1">defaultValue <a class="header-anchor" href="#defaultvalue" aria-label="Permalink to &quot;defaultValue&quot;">​</a></h3><p>表单默认值 如果传入model，该值无效</p><ul><li><strong>Type:</strong> <code>any</code></li></ul><h3 id="placeholder" tabindex="-1">placeholder <a class="header-anchor" href="#placeholder" aria-label="Permalink to &quot;placeholder&quot;">​</a></h3><p>输入框描述</p><ul><li><strong>Type:</strong> <code>string</code></li></ul><h3 id="rules" tabindex="-1">rules <a class="header-anchor" href="#rules" aria-label="Permalink to &quot;rules&quot;">​</a></h3><p>表单校验规则</p><ul><li><strong>Type:</strong> <code>FormItemRules&lt;T&gt; | FormItemRules&lt;T&gt;[] | boolean</code></li></ul><h3 id="slotkey" tabindex="-1">slotKey <a class="header-anchor" href="#slotkey" aria-label="Permalink to &quot;slotKey&quot;">​</a></h3><p>插槽名称</p><ul><li><strong>Type:</strong> <code>string</code></li></ul><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h3><p>form-item表单的类型 目前暂不支持上传类型组件，如需要，则建议使用插槽</p><ul><li><strong>Type:</strong> <code>FormSchemaType</code></li></ul><h3 id="render" tabindex="-1">render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render&quot;">​</a></h3><p>自定义渲染，优先级低于插槽</p><ul><li><strong>Type:</strong> <code>Render&lt;T, FormItemsSchema&gt;</code></li></ul><h3 id="col" tabindex="-1">col <a class="header-anchor" href="#col" aria-label="Permalink to &quot;col&quot;">​</a></h3><p>栅格的布局方式</p><ul><li><p><strong>Type:</strong> <code>IFormItemCol</code></p></li><li><p><strong>Type:</strong> <code>boolean</code></p></li></ul><h3 id="enter" tabindex="-1">enter <a class="header-anchor" href="#enter" aria-label="Permalink to &quot;enter&quot;">​</a></h3><p>回车</p><ul><li><strong>Type:</strong> <code>(value: any) =&gt; void</code></li></ul><h3 id="change" tabindex="-1">change <a class="header-anchor" href="#change" aria-label="Permalink to &quot;change&quot;">​</a></h3><p>值改变时的方法</p><ul><li><strong>Type:</strong> <code>(value: any) =&gt; void</code></li></ul><h3 id="componentprops" tabindex="-1">componentProps <a class="header-anchor" href="#componentprops" aria-label="Permalink to &quot;componentProps&quot;">​</a></h3><p>组件参数</p><h2 id="formschema" tabindex="-1">FormSchema <a class="header-anchor" href="#formschema" aria-label="Permalink to &quot;FormSchema&quot;">​</a></h2><p>表单</p><h3 id="issearch" tabindex="-1">isSearch <a class="header-anchor" href="#issearch" aria-label="Permalink to &quot;isSearch&quot;">​</a></h3><p>是否使用查询表单，设置此参数，表单相关属性会失效，仅提供查询模式</p><ul><li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li></ul><h3 id="columns" tabindex="-1">columns <a class="header-anchor" href="#columns" aria-label="Permalink to &quot;columns&quot;">​</a></h3><p>显示列数</p><ul><li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>3</code></p></li></ul><h3 id="items" tabindex="-1">items <a class="header-anchor" href="#items" aria-label="Permalink to &quot;items&quot;">​</a></h3><p>表单项配置</p><ul><li><strong>Type:</strong> <code>FormItemsSchema&lt;T&gt;[]</code></li></ul><h2 id="formcontext" tabindex="-1">FormContext <a class="header-anchor" href="#formcontext" aria-label="Permalink to &quot;FormContext&quot;">​</a></h2><p>表达上下文</p><h3 id="model" tabindex="-1">model <a class="header-anchor" href="#model" aria-label="Permalink to &quot;model&quot;">​</a></h3><p>form 数据对象</p><ul><li><strong>Type:</strong> <code>T</code></li></ul><h2 id="formschemareturn" tabindex="-1">FormSchemaReturn <a class="header-anchor" href="#formschemareturn" aria-label="Permalink to &quot;FormSchemaReturn&quot;">​</a></h2><p>表单方法</p><h3 id="getfieldsvalues" tabindex="-1">getFieldsValues <a class="header-anchor" href="#getfieldsvalues" aria-label="Permalink to &quot;getFieldsValues&quot;">​</a></h3><p>获取表单值</p><ul><li><strong>Type:</strong> <code>(serialize?: boolean) =&gt; Record&lt;string, any&gt;</code></li></ul><h3 id="setfieldsvalues" tabindex="-1">setFieldsValues <a class="header-anchor" href="#setfieldsvalues" aria-label="Permalink to &quot;setFieldsValues&quot;">​</a></h3><p>设置表单值</p><ul><li><strong>Type:</strong> <code>&lt;T&gt;(values: Record&lt;keyof T, any&gt;) =&gt; void</code></li></ul><h3 id="scrollintoview" tabindex="-1">scrollIntoView <a class="header-anchor" href="#scrollintoview" aria-label="Permalink to &quot;scrollIntoView&quot;">​</a></h3><p>平滑滚动定位到对应的视图</p><ul><li><strong>Type:</strong> <code>(field: FormItemsSchema[&#39;prop&#39;]) =&gt; void</code></li></ul><h3 id="validate" tabindex="-1">validate <a class="header-anchor" href="#validate" aria-label="Permalink to &quot;validate&quot;">​</a></h3><p>表单校验</p><ul><li><strong>Type:</strong> <code>(isScrollToField?: boolean, callback?: FormValidateCallback) =&gt; Promise&lt;any&gt;</code></li></ul><h3 id="validatefield" tabindex="-1">validateField <a class="header-anchor" href="#validatefield" aria-label="Permalink to &quot;validateField&quot;">​</a></h3><p>校验表单某个字段验证</p><ul><li><strong>Type:</strong> <code>(...args: any[]) =&gt; Promise&lt;any&gt;</code></li></ul><h3 id="resetfields" tabindex="-1">resetFields <a class="header-anchor" href="#resetfields" aria-label="Permalink to &quot;resetFields&quot;">​</a></h3><p>重置表单</p><ul><li><strong>Type:</strong> <code>(...args: string[]) =&gt; void</code></li></ul><h3 id="clearvalidate" tabindex="-1">clearValidate <a class="header-anchor" href="#clearvalidate" aria-label="Permalink to &quot;clearValidate&quot;">​</a></h3><p>清空某个字段的表单有验证信息</p><ul><li><strong>Type:</strong> <code>(...args: string[]) =&gt; void</code></li></ul><h3 id="appendfields" tabindex="-1">appendFields <a class="header-anchor" href="#appendfields" aria-label="Permalink to &quot;appendFields&quot;">​</a></h3><p>追加组件配置</p><ul><li><strong>Type:</strong> <code>&lt;T = any&gt;( item: FormItemsSchema&lt;T&gt;, to?: FormItemsSchema&lt;T&gt;[&#39;prop&#39;] | boolean ) =&gt; Promise&lt;unknown&gt;</code></li></ul><h3 id="deletefield" tabindex="-1">deleteField <a class="header-anchor" href="#deletefield" aria-label="Permalink to &quot;deleteField&quot;">​</a></h3><p>删除指定表单项</p><ul><li><strong>Type:</strong> <code>&lt;T = any&gt;(prop: FormItemsSchema&lt;T&gt;[&#39;prop&#39;]) =&gt; Promise&lt;void&gt;</code></li></ul><h2 id="useformschemareturntype" tabindex="-1">UseFormSchemaReturnType <a class="header-anchor" href="#useformschemareturntype" aria-label="Permalink to &quot;UseFormSchemaReturnType&quot;">​</a></h2><p>表单返回类型</p><h3 id="registry" tabindex="-1">registry <a class="header-anchor" href="#registry" aria-label="Permalink to &quot;registry&quot;">​</a></h3><p>表单注册函数</p><ul><li><strong>Type:</strong> <code>RegisterFn&lt;FormSchemaReturn&gt;</code></li></ul><h3 id="getforminstance" tabindex="-1">getFormInstance <a class="header-anchor" href="#getforminstance" aria-label="Permalink to &quot;getFormInstance&quot;">​</a></h3><p>表单实例</p><ul><li><strong>Type:</strong> <code>FormSchemaInstance</code></li></ul><h2 id="iformitemcol" tabindex="-1">IFormItemCol <a class="header-anchor" href="#iformitemcol" aria-label="Permalink to &quot;IFormItemCol&quot;">​</a></h2><p>列宽配置</p><ul><li><strong>Type:</strong><code>| Partial&lt;Pick&lt;ColProps, &#39;span&#39; | &#39;sm&#39; | &#39;xs&#39; | &#39;md&#39; | &#39;lg&#39; | &#39;xl&#39;&gt;&gt; | number</code></li></ul><h2 id="formschematype" tabindex="-1">FormSchemaType <a class="header-anchor" href="#formschematype" aria-label="Permalink to &quot;FormSchemaType&quot;">​</a></h2><p>el-基础控件</p><ul><li><strong>Type:</strong><code>| &#39;input-number&#39; | &#39;input&#39; | &#39;select&#39; | &#39;autocomplete&#39; | &#39;switch&#39; | &#39;rate&#39; | &#39;divider&#39; | &#39;slider&#39; | &#39;time-picker&#39; | &#39;date-picker&#39; | &#39;time-select&#39; | &#39;time-range&#39; | &#39;checkbox-group&#39; | &#39;radio-group&#39; | &#39;cascade&#39;</code></li></ul><h2 id="formschemainstance" tabindex="-1">FormSchemaInstance <a class="header-anchor" href="#formschemainstance" aria-label="Permalink to &quot;FormSchemaInstance&quot;">​</a></h2><p>表单实例方法</p><ul><li><strong>Type:</strong><code>() =&gt; Promise&lt;FormSchemaReturn | null&gt;</code></li></ul>',108)]))}const p=a(r,[["render",i]]);export{u as __pageData,p as default};
